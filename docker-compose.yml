services:
    dash-app:
        build: .
        container_name: dash-app
        image: app-image
        command: [gunicorn, --workers=4, --threads=2, --bind=0.0.0.0:8050, app:server]
        environment:
            - DEBUG=${DEBUG}
            - CELERY_ENABLED=${CELERY_ENABLED}
            - CELERY_BROKER_URL=${CELERY_BROKER_URL}
            - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
            - SENTRY_DSN=${SENTRY_DSN}
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            - AWS_REGION=${AWS_REGION}
            - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
        ports:
            - "8050:8050"
        volumes:
            - .:/app
        depends_on:
            - redis

    celery-worker:
        container_name: celery-worker
        build: .
        image: app-image
        command: [celery, -A, data, worker, -B, -s, /tmp/celerybeat-schedule, --loglevel=INFO]
        environment:
            - DEBUG=${DEBUG}
            - EARTHDATA_BASE_URL=${EARTHDATA_BASE_URL}
            - EARTHDATA_USERNAME=${EARTHDATA_USERNAME}
            - EARTHDATA_PASSWORD=${EARTHDATA_PASSWORD}
            - CELERY_BROKER_URL=${CELERY_BROKER_URL}
            - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
            - SENTRY_DSN=${SENTRY_DSN}
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            - AWS_REGION=${AWS_REGION}
            - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
        volumes:
            - .:/app
        depends_on:
            - redis

    redis:
        container_name: redis
        image: redis:7.2.3-alpine
        ports:
            - "6379:6379"
